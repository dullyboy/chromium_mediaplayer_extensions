[
    Constructor,
] interface TvMediaPlayer {
    long getNativePlayerInstanceID();

    void setSingleOrPlaylistMode(long mode);

    long getSingleOrPlaylistMode();

    void setVideoDisplayMode(long videoDisplayMode);

    long getVideoDisplayMode();

    void setVideoDisplayArea(long left, long top, long width, long height);
    
    long getVideoDisplayLeft();

    long getVideoDisplayTop();

    long getVideoDisplayWidth();

    long getVideoDisplayHeight();

    void setMuteFlag(long muteFlag);

    long getMuteFlag();

    void setNativeUIFlag(long nativeUIFlag);

    long getNativeUIFlag();
    
    void setMuteUIFlag(long muteFlag);

    long getMuteUIFlag();

    void setAudioVolumeUIFlag(long audioVolumeUIFlag);

    long getAudioVolumeUIFlag();
    
    void setAudioTrackUIFlag(long audioTrackUIFlag);

    long getAudioTrackUIFlag();

    void setProgressBarUIFlag(long progressBarUIFlag);
    
    long getProgressBarUIFlag();

    void setChannelNoUIFlag(long channelNOUIFlag);

    long getChannelNoUIFlag();

    void setSubtitileFlag(long subtitileFlag);

    long getSubtitileFlag();

    void setVideoAlpha(long videoAlpha);
    
    long getVideoAlpha();

    void setAllowTrickmodeFlag(long allowTrickmodeFlag);

    long getAllowTrickmodeFlag();

    void setCycleFlag(long cycleFlag);

    long getCycleFlag();

    void setRandomFlag(long randomFlag);

    long getRandomFlag();

    void setVendorSpecificAttr(DOMString vendorSpecificAttr);
    
    DOMString getVendorSpecificAttr();

    DOMString getMediaCode();

    long getMediaDuration();

    DOMString getCurrentPlayTime();

    DOMString getPlaybackMode();

    long GetLastError();

    long getChannelNum();
    
    DOMString getCurrentAudioChannel();
    
    DOMString getAudioTrack();

    DOMString getSubtitle();

    long getMediaCount();
    
    long getCurrentIndex();

    DOMString getEntryID();

    DOMString getPlaylist();

    long bindNativePlayerInstance(long nativePlayerInstanceID);

    void initMediaPlayer(long nativePlayerInstanceID, 
                                    long playlistFlag, 
                                    long videoDisplayMode, 
                                    long height, 
                                    long width, 
                                    long left, 
                                    long top, 
                                    long muteFlag, 
                                    long useNativeUIFlag, 
                                    long subtitleFlag, 
                                    long videoAlpha, 
                                    long cycleFlag, 
                                    long randomFlag);

    void releaseMediaPlayer(long nativePlayerInstanceID);

    void setSingleMedia(DOMString mediaStr);

    long addSingleMedia(long index, DOMString mediaStr);

    long addBatchMedia(DOMString batchMediaStr);

    void removeMediaByEntryID(DOMString entryID);

    void removeMediaByIndex (long index);

    void clearAllMedia();

    void moveMediaByIndex(DOMString entryID, long toIndex);

    void moveMediaByOffset(DOMString entryID, long offset);

    void moveMediaByIndex1(long index, long toIndex);

    void moveMediaByOffset1(long index, long offset);

    void moveMediaToNext(DOMString entryID);

    void moveMediaToPrevious(DOMString entryID);

    void moveMediaToFirst(DOMString entryID);

    void moveMediaToLast(DOMString entryID);

    void moveMediaToNext1(long index);

    void moveMediaToPrevious1(long index);

    void moveMediaToFirst1(long index);

    void moveMediaToLast1(long index);

    void selectMediaByIndex(long index);

    void selectMediaByOffset(long offset);

    void selectNext();

    void selectPrevious();

    void selectFirst();

    void selectLast();

    void selectMediaByEntryID(DOMString entryID);

    long joinChannel(long userchannelid);

    void leaveChannel();

    void playFromStart();

    void playByTime(long type, DOMString timestamp, long speed);

    void pause();

    void fastForward(long speed);

    void fastRewind(long speed);

    void resume();

    void gotoEnd();

    void gotoStart();

    void stop();

    void refreshVideoDisplay();
    
    void switchAudioChannel();
    
    void switchAudioTrack();

    void switchSubtitle();

    void sendVendorSpecificCommand(DOMString xml);

    long getAudioPID();

    long getAudioPIDs();

    void setAudioPID(long pid);

    long getSubtitlePID();

    long getSubtitlePIDs();

    void setSubtitlePID(long pid);

    void setVolume(long intvolume);
    
    long getVolume();

    DOMString set(DOMString ioStr, DOMString wrStr);

    DOMString get(DOMString ioStr);

    long Data(long start, long end);

    void videoshow();

    void videohide();

    //game call function                                                                                                                 
    //void runGame(const char* values);

    //[NotEnumerable, Custom, Unforgeable] any valueOf();
};
